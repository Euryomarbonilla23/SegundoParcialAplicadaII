@page "/registrocobros"
@using SegundoParcialAplicadaII.BLL
@using SegundoParcialAplicadaII.Models
@inject CobrosBLL cobroBLL
@inject ClientesBLL clienteBLL
<h3>RegistroVentas</h3>



<EditForm Model="Cobro" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <h3>Registro de Cobros</h3>
            </div>

            <div class="card-body">
                <form>
                    <div class="form-group form-inline">
                        <div class="form-group ">
                            <label> Cobro Id </label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Cobro.CobroId" class="form-control " />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-secondary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>

                            </div>
                        </div>

                        <div class="form-group ">
                            <label>Fecha</label>
                            <div class="input-group">
                                <InputDate @bind-Value="Cobro.Fecha" class="form-control" />

                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Cliente ID</label>
                        <select @bind="Cobro.ClienteId" class="form-control" @onblur="VentasPendientes">
                            <option value="0" disabled selected>Seleccione un cliente</option>
                            @foreach (var item in ClienteList)
                            {
                                <option value="@item.ClienteId">@item.Nombres</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Facturas Pendientes</label>


                        <table class="table table-striped">
                            <tr>
                                <th>ID</th>
                                <th>Fecha</th>
                                <th>Monto</th>
                                <th>Balance</th>
                                <th>Cobrado</th>
                                <th>Pagar</th>

                            </tr>

                            @foreach (var item in Cobro.Cobrosdetalles)
                            {
                                <tr>
                                    <td>@item.VentaId</td>
                                    <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                                    <td>@item.Monto.ToString("N2")</td>
                                    <td>@item.Balance.ToString("N2")</td>
                                    <td>@item.Cobrado.ToString("N2")</td>
                                    <td> <input type="checkbox" @onchange="@(() => Cobrar(item))" /> </td>
                                </tr>
                            }

                        </table>

                    </div>

                    <div class=" form-group">
                        <div class="form-group">
                            <label>Totales</label>
                            <span class="form-control">@Cobro.Cobrosdetalles.Count()</span>
                        </div>

                        <div class="form-group">
                            <label>Cobro Total</label>
                            <InputNumber @bind-Value="" class="form-control" readOnly="true" />

                        </div>
                    </div>

                    <div class="form-group ">
                        <label>Observaciones</label>
                        <textarea @bind="Cobro.Observaciones" class="form-control" row="5" placeholder="Observacion" />
                    </div>

                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-primary " @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-success ">Guardar</button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>

        </div>
    </div>

</EditForm>

@code {

    List<Clientes> ClienteList = new List<Clientes>();
    List<CobrosDetalles> VentaList = new List<CobrosDetalles>();
    public Cobros Cobro { get; set; } = new Cobros();
    public Clientes Cliente { get; set; } = new Clientes();


    public async Task Guardar()
    {
        bool paso = await cobroBLL.Guardar(Cobro);
        if (paso)
        {

        }

    }
    public async Task Nuevo()
    {

        Cobro = new Cobros();
        ClienteList = await clienteBLL.GetList(c => true);
        VentaList = new List<CobrosDetalles>();
        Cobro.Fecha = DateTime.Now;
    }

    public async Task Eliminar()
    {
        bool paso = await cobroBLL.Eliminar(Cobro.CobroId);
    }

    public async Task Buscar()
    {
        Cobro = await cobroBLL.Buscar(Cobro.CobroId);
    }

    private void Cobrar(CobrosDetalles cobroDetalle)
    {
        if (cobroDetalle.Cobrado == 0)
        {
            cobroDetalle.Cobrado = cobroDetalle.Balance;
            Cobro.BalanceCobro += cobroDetalle.Cobrado;
        }
        else
        {
            cobroDetalle.Cobrado = 0;
            Cobro.BalanceCobro -= cobroDetalle.Balance;
        }
    }

    private async Task ObtenerVentasPendientes()
    {
        if (Cobro.CobroId == 0)
            Cobro.Cobrosdetalles = await VentasBLL.GetVentasPendiente();
    }
}
